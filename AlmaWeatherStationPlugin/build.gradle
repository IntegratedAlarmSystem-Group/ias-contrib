buildscript {
  repositories {
    jcenter()
    maven {
			url "http://artifactory.inria.cl:8081/artifactory/inria-maven"
		}
  }
  dependencies {
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
  }
}

apply plugin: 'java'
apply plugin: "com.jfrog.artifactory"

group = 'org.eso.ias'
version = System.getenv('BUILD_NUMBER') ? System.getenv('BUILD_NUMBER') : "local"

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
        resources {
            srcDirs = ['resources']
        }
    }
    test {
        java {
            srcDirs = ['test']
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "http://artifactory.inria.cl:8081/artifactory/inria-maven"
    }
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.25',
    'ch.qos.logback:logback-classic:1.2.3',
    'org.eso.ias:plugin:1.0.1',
    'org.eso.ias:basic-types:1.0.1'

    runtime 'com.fasterxml.jackson.core:jackson-core:2.8.7',
    'com.fasterxml.jackson.core:jackson-databind:2.8.7',
    'com.fasterxml.jackson.core:jackson-annotations:2.8.7',
    'org.apache.kafka:kafka-clients:1.0.0',
    'ch.qos.logback:logback-core:1.2.3'


    testCompile 'junit:junit:4.12'
}

jar {
    manifest {
        attributes 'Main-Class': 'WeatherPlugin'
    }
    from('config') { include '*.json' into 'config' }
    destinationDir = file('dist/')

    // add dependencies to the jar - fat jar
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

uploadArchives {
	repositories {
		maven {
			credentials {
				username System.getenv('ARTIFACTORY_USERNAME')
				password System.getenv('ARTIFACTORY_PASSWORD')
			}
			url "http://artifactory.inria.cl:8081/artifactory/inria-maven"
		}
	}
}

defaultTasks 'build', 'clean'
