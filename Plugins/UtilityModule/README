At any given time, the antennas are connected to one APE or another.
Accesing their utility module is possibkle ony from the APE where they
are connected.
However we want to run only one single plugin in APE1 so
we have to run the commands in each APEs with ssh, collect and parse the
output to get the values of the monitor points to send to the java
UDP plugin.


This plugin is composed of 2 files:
  * iasUtilityModuleReader.py: runs locally to get the moinitor point of the utility
                               modules connected to each APEs
  * iasUtilityModuleSsRunner.py: runs generatePluginConfig.py in each APE by means
                                 of ssh then parse the output to get the values of the
                                 monitor points

The plugin produces one monitor point of type STRING for each antenna
<<<<<<< HEAD
<<<<<<< Updated upstream
with ID=Array-UMStatus-PM04 and value 
=======
with ID=Array-UMStatus-Ant[!#43!] and value
>>>>>>> Stashed changes
=======
with ID=Array-UMStatus-Ante[!#43!] and value
>>>>>>> master
'AC-POWER:0,AT-ZENITH:0,HVAC:0,FIRE:0,UPS-POWER:1,STOW-PIN:1,RX-CAB-TEMP:0,DRIVE-CAB-TEMP:1,ANTENNA-POS:0,E-STOP:0'

NOTE
Antennas are accesible only from the APE where they are connected i.e.
one between APE1, APE2 and TFINT

The script runs once every 10 seconds. Unfortunately crontab allows
only to schedule by minutes (there are tricks anyhow...)

Another solution is to run the script throgh watch:
 > watch -n 10 ./utilitymodulePlugin.py 11112

The UDP plugin must be started the same way as the one for the Antenna pad association 
but with a different port number
> nohup iasRun -l j org.eso.ias.plugin.network.UdpPlugin -u 11112  -c ./antennaPadsPlugin.json >/dev/null &

Another possibly better solution is to run only one java UDP plugin tocloocet data from antenna/pads 
and the utility modules.

This plugin offers script to generate the IASIOs to add to the iasios.json and the configuration
of the UDP plugin.
